<template>
  <div class="mod-config">
    <center>
    <a-table :inline="true" :model="dataForm" @keyup.enter.native="getDataList()">
      <a-table-column>
        <el-input v-model="dataForm.key" placeholder="参数名" clearable></el-input>
      </a-table-column>
      <a-table-column>
        <el-button @click="getDataList()">查询</el-button>
        <el-button  v-if="purview.add == role.add" type="primary" @click="addOrUpdateHandle()">新增</el-button>
        <el-button v-if="purview.delete == role.delete" type="danger" @click="deleteHandle()" :disabled="dataListSelections.length <= 0">批量删除</el-button>
      </a-table-column>
    </a-table>
    </center>
    <a-table
      :data="dataList"
      border
      v-loading="dataListLoading"
      @selection-change="selectionChangeHandle"
      style="width: 100%;">
      <template #columns>
      <a-table-column
              :bordered="false"
               row-key="id"
      >
      </a-table-column>
#foreach($column in $columns)
      <a-table-column
          title="${column.attrname}"
          label="${column.comments}">
      </a-table-column>
#end
      <a-table-column
        fixed="right"
        header-align="center"
        align="center"
        width="150"
        label="操作">
        <template slot-scope="scope">
          <el-button v-if="purview.update == role.update" type="text" size="small" @click="addOrUpdateHandle(scope.row.${pk.attrname})">修改</el-button>
          <el-button v-if="purview.delete == role.delete" type="text" size="small" @click="deleteHandle(scope.row.${pk.attrname})">删除</el-button>
        </template>
      </a-table-column>
      </template>
    </a-table>
    <center>
    <a-pagination
       background
      :pager-count="10"
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </a-pagination>
      </center>
    <!-- 弹窗, 新增 / 修改 -->
    <add-or-update v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"></add-or-update>
  </div>
</template>

<script>
  import AddOrUpdate from './${pathName}-add-or-update'
  import api from "@/api/modules/${pathName}";
  import rout from "@/api/routing";
  export default {
    data () {
      return {
        role: {
          update: #[[this.$role.role_update]]#,
          delete: #[[this.$role.role_delete]]#,
          add: #[[this.$role.role_add]]#,
        },
        purview: {},
        dataForm: {
          key: ''
        },
        dataList: [],
        pageIndex: 1,
        pageSize: 10,
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        addOrUpdateVisible: false
      }
    },
    components: {
      AddOrUpdate
    },
    created () {
      this.getDataList()
      this.getPurview();
    },
    methods: {
      /**
       * 获取当前页面的权限
       */
      getPurview() {
        rout.purview(this.$route.meta.id).then((res) => {
          this.purview = res.data.data;
        });
      },
      // 获取数据列表
      getDataList () {
        this.dataListLoading = true
        var parms={
          'page': this.pageIndex,
          'limit': this.pageSize,
          'key': this.dataForm.key
        }
        api.list(parms).then(({data}) => {
          if (data) {
            this.dataList = data.page.list
            this.totalPage = data.page.totalCount
          } else {
            this.dataList = []
            this.totalPage = 0
          }
          this.dataListLoading = false
        })
      },
      // 每页数
      sizeChangeHandle (val) {
        this.pageSize = val
        this.pageIndex = 1
        this.getDataList()
      },
      // 当前页
      currentChangeHandle (val) {
        this.pageIndex = val
        this.getDataList()
      },
      // 多选
      selectionChangeHandle (val) {
        this.dataListSelections = val
      },
      // 新增 / 修改
      addOrUpdateHandle (id) {
        this.addOrUpdateVisible = true
        #[[this.$nextTick(() => {]]#
          this.$refs.addOrUpdate.init(id)
        })
      },
      // 删除
      deleteHandle (id) {
        var ids = id ? [id] : this.dataListSelections.map(item => {
          return item.${pk.attrname}
        })
        #[[this.$confirm(`确定对[id=${ids.join(',')}]进行[${id ? '删除' : '批量删除'}]操作?`, '提示', {]]#
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
        api.delete(ids).then((res) => {
            if (res.code==200) {
              #[[this.$message({]]#
                message: '操作成功',
                type: 'success',
                duration: 1500,
                onClose: () => {
                  this.getDataList()
                }
              })
            } else {
              #[[this.$message.error(data.msg)]]#
            }
          })
        })
      }
    }
  }
</script>
